@using Amazon.GenAI.Abstractions.ChatHistory
@using Amazon.GenAI.Models

<EditForm Model="@Model" OnSubmit="PromptChanged">
        <MudTextField T="string" @ref="_promptField" Label="@DefaultText" Variant="Variant.Outlined" Margin="Margin.Dense"
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary"
                      Style="background-color: white"/>
        <Progress Status="Status" OnClickCallback="PromptChanged"></Progress>
</EditForm>

@code {
    [Parameter] public ChatMessageHistory? Model { get; set; } = new();
    [Parameter] public Status Status { get; set; } = Status.Default;
    [Parameter] public EventCallback<string> OnPromptChanged { get; set; }
    [Parameter] public string? DefaultText { get; set; } = "";
    [Parameter] public string? BuiltinPrompt { get; set; }

    private MudTextField<string>? _promptField = new();

    protected override void OnParametersSet()
    {
        if (_promptField?.Text != BuiltinPrompt)
        {
            _promptField?.SetText(BuiltinPrompt);
            Console.WriteLine("a parameter has changed");
        }
    }

    private async Task PromptChanged()
    {
        await OnPromptChanged.InvokeAsync(_promptField?.Value);
        _promptField?.SetText("");
    }
}
