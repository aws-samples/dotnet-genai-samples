@using Amazon.GenAI.Models
﻿@using Amazon.GenAI.Models

<div class="upload-container @(Status != Status.Thinking ? "" : "hidden")">
    <MudFileUpload T="IReadOnlyList<IBrowserFile>"
                   @bind-Files="@Files"
                   Accept="@Accept"
                   OnFilesChanged="@OnFileChangedCallback"
                   For="@(() => Files!)"
                   Hidden="false" Class="flex-1 upload-button"
                   MaximumFileCount="FileCount"
                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                   @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
        <ButtonTemplate>
            <MudIcon Icon="@Icons.Material.Filled.CloudUpload" Size="Size.Large" Class="upload-icon" />
        </ButtonTemplate>
    </MudFileUpload>
</div>


@code {
    [Parameter, EditorRequired]
    public string? Accept { get; set; }

    [Parameter, EditorRequired]
    public IReadOnlyList<IBrowserFile>? Files { get; set; }

    [Parameter, EditorRequired] public int FileCount { get; set; } = 0;

    [Parameter, EditorRequired]
    public Status Status { get; set; }

    private const string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string _dragClass = DefaultDragClass;
    private string Pluralize => FileCount > 1 ? "s" : "";

    [Parameter]
    public EventCallback<InputFileChangeEventArgs> OnFileChangedCallback { get; set; }

    private void SetDragClass()
    {
        _dragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        _dragClass = DefaultDragClass;
    }
}